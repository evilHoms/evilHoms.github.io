
;'use strict';canvas=document.querySelector(`#drawing-area`);c=canvas.getContext(`2d`);canvas.width=innerWidth;canvas.height=innerHeight;const BALLS_RADIUS=20;const NUMBER_OF_BALLS={easy:{target:3,active:5},normal:{target:6,active:4},hard:{target:10,active:3},nightmare:{target:20,active:1}};const BALLS_COLORS={active:`#700`,target:`#add`,hited:`#abb`,current:`#f00`}
const startMsg=new Message(c,`BALL EM ALL!!!`,innerWidth/4,innerHeight/4,innerWidth/2,innerHeight/2,2.2,1.9,`#000`);const winMsg=new Message(c,`YOU WIN!!!`,innerWidth/4,innerHeight/4,innerWidth/2,innerHeight/2,2,1.9,`#000`);const looseMsg=new Message(c,`YOU LOOSE!!!`,innerWidth/4,innerHeight/4,innerWidth/2,innerHeight/2,2.25,1.9,`#000`);const helpText=[];helpText.push(new Text(c,innerWidth/5,innerHeight/5,`Your goal is to knock out all blue balls.`,14));helpText.push(new Text(c,innerWidth/5,innerHeight/4,`If your current mooving ball stops, it becomes`,14));helpText.push(new Text(c,innerWidth/5,innerHeight/3.3,`blue and you should knock it out too.`,14));helpText.push(new Text(c,innerWidth/5,innerHeight/2.8,`You loose if your red balls ends and blue balls still standing.`,14));const buttons=[];const startBtn=new Button(c,startMsg.x+startMsg.width/4.5,startMsg.y+startMsg.height/2.8,startMsg.width/1.8,startMsg.height/5,`START`);const optionsBtn=new Button(c,startMsg.x+startMsg.width/4.5,startMsg.y+startMsg.height/1.8,startMsg.width/1.8,startMsg.height/5,`OPTIONS`);const retryBtn=new Button(c,startMsg.x+startMsg.width/4.5,startMsg.y+startMsg.height/2.8,startMsg.width/1.8,startMsg.height/5,`RETRY`);const helpBtn=new Button(c,startMsg.x+startMsg.width/4.5,startMsg.y+startMsg.height/1.33,startMsg.width/1.8,startMsg.height/5,`HELP`);buttons.push(startBtn,optionsBtn,retryBtn,helpBtn);const GAME_STATE={inGame:false,isWin:false,isLoose:false,difficulty:`easy`};const mouse={x:0,y:0};const cursor=new Cursor(c);const ground=new Ground(c);const ACTIVE_BALL_START_POS={x:ground.x,y:ground.y-ground.r+BALLS_RADIUS*1.5};const strach=new Traectory(c,ACTIVE_BALL_START_POS.x,ACTIVE_BALL_START_POS.y,ACTIVE_BALL_START_POS.x,ACTIVE_BALL_START_POS.y);const targetBalls=[];const activeBalls=[];let isActiveBallPressed=false;let currentActiveBall=undefined;let isWin=false;window.addEventListener(`resize`,winResizeEvent);window.addEventListener(`mousemove`,mouseMoveEvent);window.addEventListener(`mousedown`,activeBallMouseDown);window.addEventListener(`mouseup`,activeBallMouseUp);window.addEventListener(`click`,clickEvent);addActiveBalls(c,NUMBER_OF_BALLS.easy.active,ground);addTargetBalls(c,NUMBER_OF_BALLS.easy.target,ground);animate();function animate(){requestAnimationFrame(animate);clear();if(!GAME_STATE.inGame){if(GAME_STATE.isWin){retryBtn.isActive=true;helpBtn.isActive=true;optionsBtn.isActive=true;winMsg.update();retryBtn.update();helpBtn.update();optionsBtn.update();helpText.forEach(el=>{if(el.isActive)el.update();});}
else if(GAME_STATE.isLoose){retryBtn.isActive=true;helpBtn.isActive=true;optionsBtn.isActive=true;looseMsg.update();retryBtn.update();helpBtn.update();optionsBtn.update();helpText.forEach(el=>{if(el.isActive)el.update();});}
else{startBtn.isActive=true;helpBtn.isActive=true;optionsBtn.isActive=true;startMsg.update();startBtn.update();helpBtn.update();optionsBtn.update();helpText.forEach(el=>{if(el.isActive)el.update();});}}
else{ground.update();updateObjectsArray(c,targetBalls);updateObjectsArray(c,activeBalls);if(isActiveBallPressed){currentActiveBall.update(mouse.x,mouse.y);strach.update(mouse.x,mouse.y);}
else if(currentActiveBall.isActive){strach.update();currentActiveBall.checkCollision(targetBalls);currentActiveBall.update();if(!currentActiveBall.isActive){isWin=true;targetBalls.forEach(el=>{if(el.isBoundable)isWin=false;});if(isWin){GAME_STATE.inGame=false;GAME_STATE.isWin=true;}
currentActiveBall.color=BALLS_COLORS.target;targetBalls.push(currentActiveBall);if(activeBalls.length>0)currentActiveBall=activeBalls.pop();else{GAME_STATE.inGame=false;GAME_STATE.isLoose=true;}}}
else{currentActiveBall.update();}}
cursor.update(mouse.x,mouse.y);}
function clear(){c.clearRect(0,0,canvas.width,canvas.height);}
function updateObjectsArray(ctx,objArray){objArray.forEach((el)=>{el.update();});}
function addTargetBalls(ctx,numberOfElements,unavailableArea){let availableXY;for(let i=0;i<numberOfElements;i++){availableXY=randomBallPosition(targetBalls,BALLS_RADIUS,unavailableArea);targetBalls.push(new Ball(ctx,availableXY.x,availableXY.y,BALLS_RADIUS,BALLS_COLORS.target));targetBalls[i].isBoundable=true;}
function randomBallPosition(objArray,radius,unavailableArea){let isCoordsAvailable=true;let x=0;let y=0;do{isCoordsAvailable=true;x=Math.round(Math.random()*(innerWidth-radius*3))+radius*1.5;y=Math.round(Math.random()*(innerHeight-radius*3))+radius*1.5;objArray.forEach((el)=>{if(Math.sqrt(Math.pow(x-el.x,2)+Math.pow(y-el.y,2))<radius*2){isCoordsAvailable=false;}});if(Math.sqrt(Math.pow(x-unavailableArea.x,2)+Math.pow(y-unavailableArea.y,2))<radius+unavailableArea.r){isCoordsAvailable=false;}}while(!isCoordsAvailable);return{x,y};}}
function addActiveBalls(ctx,numberOfElements,startingArea){for(let i=0;i<numberOfElements;i++){activeBalls.push(new Ball(ctx,startingArea.x,startingArea.y-startingArea.r+BALLS_RADIUS*1.5,BALLS_RADIUS,BALLS_COLORS.active));}
currentActiveBall=activeBalls.pop();}
function winResizeEvent(e){canvas.width=innerWidth;canvas.height=innerHeight;}
function mouseMoveEvent(e){mouse.x=e.x;mouse.y=e.y;}
function activeBallMouseDown(e){if(Math.sqrt(Math.pow(currentActiveBall.x-e.x,2)+Math.pow(currentActiveBall.y-e.y,2))<BALLS_RADIUS&&!currentActiveBall.isActive){console.log(`active ball clicked`);isActiveBallPressed=true;currentActiveBall.x=e.x;currentActiveBall.y=e.y;currentActiveBall.color=BALLS_COLORS.current;}}
function activeBallMouseUp(e){if(isActiveBallPressed){currentActiveBall.isActive=true;isActiveBallPressed=false;currentActiveBall.vx=(strach.x2-strach.x1)/5;currentActiveBall.vy=(strach.y2-strach.y1)/5;strach.x1=ACTIVE_BALL_START_POS.x;strach.y1=ACTIVE_BALL_START_POS.y;}}
function clickEvent(e){buttons.forEach(el=>{if(mouse.x>el.x&&mouse.y>el.y&&mouse.x<el.x+el.w&&mouse.y<el.y+el.h&&el.isActive){if(el.text===`START`){GAME_STATE.inGame=true;el.isActive=false;}
else if(el.text===`RETRY`){GAME_STATE.inGame=true;el.isActive=false;isActiveBallPressed=false;currentActiveBall=undefined;isWin=false;activeBalls.splice(0);targetBalls.splice(0);addActiveBalls(c,NUMBER_OF_BALLS.easy.active,ground);addTargetBalls(c,NUMBER_OF_BALLS.easy.target,ground);}
else if(el.text===`OPTIONS`){chooseDifficulty();}
else if(el.text===`HELP`){}}});}
function chooseDifficulty(){}
function helpMenu(){helpText.forEach(el=>{console.log(`click`);el.isActive=el.isActive===true?false:true;});}